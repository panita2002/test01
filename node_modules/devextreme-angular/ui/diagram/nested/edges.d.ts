/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import DataSource from 'devextreme/data/data_source';
import { DataSourceOptions } from 'devextreme/data/data_source';
import { Store } from 'devextreme/data/store';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoDiagramEdgesComponent extends NestedOption implements OnDestroy, OnInit {
    get customDataExpr(): ((data: any, value: any) => any) | string | undefined;
    set customDataExpr(value: ((data: any, value: any) => any) | string | undefined);
    get dataSource(): Array<any> | DataSource | DataSourceOptions | null | Store | string;
    set dataSource(value: Array<any> | DataSource | DataSourceOptions | null | Store | string);
    get fromExpr(): ((data: any, value: any) => any) | string;
    set fromExpr(value: ((data: any, value: any) => any) | string);
    get fromLineEndExpr(): ((data: any, value: any) => any) | string | undefined;
    set fromLineEndExpr(value: ((data: any, value: any) => any) | string | undefined);
    get fromPointIndexExpr(): ((data: any, value: any) => any) | string | undefined;
    set fromPointIndexExpr(value: ((data: any, value: any) => any) | string | undefined);
    get keyExpr(): ((data: any, value: any) => any) | string;
    set keyExpr(value: ((data: any, value: any) => any) | string);
    get lineTypeExpr(): ((data: any, value: any) => any) | string | undefined;
    set lineTypeExpr(value: ((data: any, value: any) => any) | string | undefined);
    get lockedExpr(): ((data: any, value: any) => any) | string | undefined;
    set lockedExpr(value: ((data: any, value: any) => any) | string | undefined);
    get pointsExpr(): ((data: any, value: any) => any) | string | undefined;
    set pointsExpr(value: ((data: any, value: any) => any) | string | undefined);
    get styleExpr(): ((data: any, value: any) => any) | string | undefined;
    set styleExpr(value: ((data: any, value: any) => any) | string | undefined);
    get textExpr(): ((data: any, value: any) => any) | string | undefined;
    set textExpr(value: ((data: any, value: any) => any) | string | undefined);
    get textStyleExpr(): ((data: any, value: any) => any) | string | undefined;
    set textStyleExpr(value: ((data: any, value: any) => any) | string | undefined);
    get toExpr(): ((data: any, value: any) => any) | string;
    set toExpr(value: ((data: any, value: any) => any) | string);
    get toLineEndExpr(): ((data: any, value: any) => any) | string | undefined;
    set toLineEndExpr(value: ((data: any, value: any) => any) | string | undefined);
    get toPointIndexExpr(): ((data: any, value: any) => any) | string | undefined;
    set toPointIndexExpr(value: ((data: any, value: any) => any) | string | undefined);
    get zIndexExpr(): ((data: any, value: any) => any) | string | undefined;
    set zIndexExpr(value: ((data: any, value: any) => any) | string | undefined);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoDiagramEdgesComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoDiagramEdgesComponent, "dxo-diagram-edges", never, { "customDataExpr": { "alias": "customDataExpr"; "required": false; }; "dataSource": { "alias": "dataSource"; "required": false; }; "fromExpr": { "alias": "fromExpr"; "required": false; }; "fromLineEndExpr": { "alias": "fromLineEndExpr"; "required": false; }; "fromPointIndexExpr": { "alias": "fromPointIndexExpr"; "required": false; }; "keyExpr": { "alias": "keyExpr"; "required": false; }; "lineTypeExpr": { "alias": "lineTypeExpr"; "required": false; }; "lockedExpr": { "alias": "lockedExpr"; "required": false; }; "pointsExpr": { "alias": "pointsExpr"; "required": false; }; "styleExpr": { "alias": "styleExpr"; "required": false; }; "textExpr": { "alias": "textExpr"; "required": false; }; "textStyleExpr": { "alias": "textStyleExpr"; "required": false; }; "toExpr": { "alias": "toExpr"; "required": false; }; "toLineEndExpr": { "alias": "toLineEndExpr"; "required": false; }; "toPointIndexExpr": { "alias": "toPointIndexExpr"; "required": false; }; "zIndexExpr": { "alias": "zIndexExpr"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxoDiagramEdgesModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoDiagramEdgesModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoDiagramEdgesModule, [typeof DxoDiagramEdgesComponent], never, [typeof DxoDiagramEdgesComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoDiagramEdgesModule>;
}
