/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { Format } from 'devextreme/common/core/localization';
import { DashStyle, Font, RelativePosition } from 'devextreme/common/charts';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoPolarChartCommonSeriesSettingsLabelComponent extends NestedOption implements OnDestroy, OnInit {
    get argumentFormat(): Format | undefined;
    set argumentFormat(value: Format | undefined);
    get backgroundColor(): string | undefined;
    set backgroundColor(value: string | undefined);
    get border(): {
        color?: string | undefined;
        dashStyle?: DashStyle | undefined;
        visible?: boolean;
        width?: number;
    };
    set border(value: {
        color?: string | undefined;
        dashStyle?: DashStyle | undefined;
        visible?: boolean;
        width?: number;
    });
    get connector(): {
        color?: string | undefined;
        visible?: boolean;
        width?: number;
    };
    set connector(value: {
        color?: string | undefined;
        visible?: boolean;
        width?: number;
    });
    get customizeText(): ((pointInfo: any) => string);
    set customizeText(value: ((pointInfo: any) => string));
    get displayFormat(): string | undefined;
    set displayFormat(value: string | undefined);
    get font(): Font;
    set font(value: Font);
    get format(): Format | undefined;
    set format(value: Format | undefined);
    get position(): RelativePosition;
    set position(value: RelativePosition);
    get rotationAngle(): number;
    set rotationAngle(value: number);
    get showForZeroValues(): boolean;
    set showForZeroValues(value: boolean);
    get visible(): boolean;
    set visible(value: boolean);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoPolarChartCommonSeriesSettingsLabelComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoPolarChartCommonSeriesSettingsLabelComponent, "dxo-polar-chart-common-series-settings-label", never, { "argumentFormat": { "alias": "argumentFormat"; "required": false; }; "backgroundColor": { "alias": "backgroundColor"; "required": false; }; "border": { "alias": "border"; "required": false; }; "connector": { "alias": "connector"; "required": false; }; "customizeText": { "alias": "customizeText"; "required": false; }; "displayFormat": { "alias": "displayFormat"; "required": false; }; "font": { "alias": "font"; "required": false; }; "format": { "alias": "format"; "required": false; }; "position": { "alias": "position"; "required": false; }; "rotationAngle": { "alias": "rotationAngle"; "required": false; }; "showForZeroValues": { "alias": "showForZeroValues"; "required": false; }; "visible": { "alias": "visible"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxoPolarChartCommonSeriesSettingsLabelModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoPolarChartCommonSeriesSettingsLabelModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoPolarChartCommonSeriesSettingsLabelModule, [typeof DxoPolarChartCommonSeriesSettingsLabelComponent], never, [typeof DxoPolarChartCommonSeriesSettingsLabelComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoPolarChartCommonSeriesSettingsLabelModule>;
}
