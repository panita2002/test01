/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy, QueryList } from '@angular/core';
import { ChartsColor, Palette, PaletteExtensionMode } from 'devextreme/common/charts';
import { HorizontalAlignment, VerticalAlignment } from 'devextreme/common';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import { DxiLinearGaugeRangeComponent } from './range-dxi';
import * as i0 from "@angular/core";
export declare class DxoLinearGaugeRangeContainerComponent extends NestedOption implements OnDestroy, OnInit {
    get backgroundColor(): ChartsColor | string;
    set backgroundColor(value: ChartsColor | string);
    get horizontalOrientation(): HorizontalAlignment;
    set horizontalOrientation(value: HorizontalAlignment);
    get offset(): number;
    set offset(value: number);
    get palette(): Array<string> | Palette;
    set palette(value: Array<string> | Palette);
    get paletteExtensionMode(): PaletteExtensionMode;
    set paletteExtensionMode(value: PaletteExtensionMode);
    get ranges(): {
        color?: ChartsColor | string;
        endValue?: number;
        startValue?: number;
    }[];
    set ranges(value: {
        color?: ChartsColor | string;
        endValue?: number;
        startValue?: number;
    }[]);
    get verticalOrientation(): VerticalAlignment;
    set verticalOrientation(value: VerticalAlignment);
    get width(): number | {
        end?: number;
        start?: number;
    };
    set width(value: number | {
        end?: number;
        start?: number;
    });
    protected get _optionPath(): string;
    get rangesChildren(): QueryList<DxiLinearGaugeRangeComponent>;
    set rangesChildren(value: QueryList<DxiLinearGaugeRangeComponent>);
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoLinearGaugeRangeContainerComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoLinearGaugeRangeContainerComponent, "dxo-linear-gauge-range-container", never, { "backgroundColor": { "alias": "backgroundColor"; "required": false; }; "horizontalOrientation": { "alias": "horizontalOrientation"; "required": false; }; "offset": { "alias": "offset"; "required": false; }; "palette": { "alias": "palette"; "required": false; }; "paletteExtensionMode": { "alias": "paletteExtensionMode"; "required": false; }; "ranges": { "alias": "ranges"; "required": false; }; "verticalOrientation": { "alias": "verticalOrientation"; "required": false; }; "width": { "alias": "width"; "required": false; }; }, {}, ["rangesChildren"], never, false, never>;
}
export declare class DxoLinearGaugeRangeContainerModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoLinearGaugeRangeContainerModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoLinearGaugeRangeContainerModule, [typeof DxoLinearGaugeRangeContainerComponent], never, [typeof DxoLinearGaugeRangeContainerComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoLinearGaugeRangeContainerModule>;
}
