/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoTreeListEditingTextsComponent extends NestedOption implements OnDestroy, OnInit {
    get addRow(): string;
    set addRow(value: string);
    get addRowToNode(): string;
    set addRowToNode(value: string);
    get cancelAllChanges(): string;
    set cancelAllChanges(value: string);
    get cancelRowChanges(): string;
    set cancelRowChanges(value: string);
    get confirmDeleteMessage(): string;
    set confirmDeleteMessage(value: string);
    get confirmDeleteTitle(): string;
    set confirmDeleteTitle(value: string);
    get deleteRow(): string;
    set deleteRow(value: string);
    get editRow(): string;
    set editRow(value: string);
    get saveAllChanges(): string;
    set saveAllChanges(value: string);
    get saveRowChanges(): string;
    set saveRowChanges(value: string);
    get undeleteRow(): string;
    set undeleteRow(value: string);
    get validationCancelChanges(): string;
    set validationCancelChanges(value: string);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoTreeListEditingTextsComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoTreeListEditingTextsComponent, "dxo-tree-list-editing-texts", never, { "addRow": { "alias": "addRow"; "required": false; }; "addRowToNode": { "alias": "addRowToNode"; "required": false; }; "cancelAllChanges": { "alias": "cancelAllChanges"; "required": false; }; "cancelRowChanges": { "alias": "cancelRowChanges"; "required": false; }; "confirmDeleteMessage": { "alias": "confirmDeleteMessage"; "required": false; }; "confirmDeleteTitle": { "alias": "confirmDeleteTitle"; "required": false; }; "deleteRow": { "alias": "deleteRow"; "required": false; }; "editRow": { "alias": "editRow"; "required": false; }; "saveAllChanges": { "alias": "saveAllChanges"; "required": false; }; "saveRowChanges": { "alias": "saveRowChanges"; "required": false; }; "undeleteRow": { "alias": "undeleteRow"; "required": false; }; "validationCancelChanges": { "alias": "validationCancelChanges"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxoTreeListEditingTextsModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoTreeListEditingTextsModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoTreeListEditingTextsModule, [typeof DxoTreeListEditingTextsComponent], never, [typeof DxoTreeListEditingTextsComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoTreeListEditingTextsModule>;
}
