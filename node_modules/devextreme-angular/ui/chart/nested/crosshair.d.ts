/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { DashStyle, Font } from 'devextreme/common/charts';
import { chartPointObject } from 'devextreme/viz/chart';
import { Format } from 'devextreme/common/core/localization';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoChartCrosshairComponent extends NestedOption implements OnDestroy, OnInit {
    get color(): string;
    set color(value: string);
    get dashStyle(): DashStyle;
    set dashStyle(value: DashStyle);
    get enabled(): boolean;
    set enabled(value: boolean);
    get horizontalLine(): boolean | {
        color?: string;
        dashStyle?: DashStyle;
        label?: {
            backgroundColor?: string;
            customizeText?: ((info: {
                point: chartPointObject;
                value: Date | number | string;
                valueText: string;
            }) => string);
            font?: Font;
            format?: Format | undefined;
            visible?: boolean;
        };
        opacity?: number | undefined;
        visible?: boolean;
        width?: number;
    };
    set horizontalLine(value: boolean | {
        color?: string;
        dashStyle?: DashStyle;
        label?: {
            backgroundColor?: string;
            customizeText?: ((info: {
                point: chartPointObject;
                value: Date | number | string;
                valueText: string;
            }) => string);
            font?: Font;
            format?: Format | undefined;
            visible?: boolean;
        };
        opacity?: number | undefined;
        visible?: boolean;
        width?: number;
    });
    get label(): {
        backgroundColor?: string;
        customizeText?: ((info: {
            point: chartPointObject;
            value: Date | number | string;
            valueText: string;
        }) => string);
        font?: Font;
        format?: Format | undefined;
        visible?: boolean;
    };
    set label(value: {
        backgroundColor?: string;
        customizeText?: ((info: {
            point: chartPointObject;
            value: Date | number | string;
            valueText: string;
        }) => string);
        font?: Font;
        format?: Format | undefined;
        visible?: boolean;
    });
    get opacity(): number | undefined;
    set opacity(value: number | undefined);
    get verticalLine(): boolean | {
        color?: string;
        dashStyle?: DashStyle;
        label?: {
            backgroundColor?: string;
            customizeText?: ((info: {
                point: chartPointObject;
                value: Date | number | string;
                valueText: string;
            }) => string);
            font?: Font;
            format?: Format | undefined;
            visible?: boolean;
        };
        opacity?: number | undefined;
        visible?: boolean;
        width?: number;
    };
    set verticalLine(value: boolean | {
        color?: string;
        dashStyle?: DashStyle;
        label?: {
            backgroundColor?: string;
            customizeText?: ((info: {
                point: chartPointObject;
                value: Date | number | string;
                valueText: string;
            }) => string);
            font?: Font;
            format?: Format | undefined;
            visible?: boolean;
        };
        opacity?: number | undefined;
        visible?: boolean;
        width?: number;
    });
    get width(): number;
    set width(value: number);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoChartCrosshairComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoChartCrosshairComponent, "dxo-chart-crosshair", never, { "color": { "alias": "color"; "required": false; }; "dashStyle": { "alias": "dashStyle"; "required": false; }; "enabled": { "alias": "enabled"; "required": false; }; "horizontalLine": { "alias": "horizontalLine"; "required": false; }; "label": { "alias": "label"; "required": false; }; "opacity": { "alias": "opacity"; "required": false; }; "verticalLine": { "alias": "verticalLine"; "required": false; }; "width": { "alias": "width"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxoChartCrosshairModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoChartCrosshairModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoChartCrosshairModule, [typeof DxoChartCrosshairComponent], never, [typeof DxoChartCrosshairComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoChartCrosshairModule>;
}
