/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { Font, LabelOverlap } from 'devextreme/common/charts';
import { Format } from 'devextreme/common/core/localization';
import { CircularGaugeLabelOverlap } from 'devextreme/viz/circular_gauge';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoCircularGaugeLabelComponent extends NestedOption implements OnDestroy, OnInit {
    get customizeText(): ((scaleValue: {
        value: number;
        valueText: string;
    }) => string);
    set customizeText(value: ((scaleValue: {
        value: number;
        valueText: string;
    }) => string));
    get font(): Font;
    set font(value: Font);
    get format(): Format | undefined;
    set format(value: Format | undefined);
    get hideFirstOrLast(): CircularGaugeLabelOverlap;
    set hideFirstOrLast(value: CircularGaugeLabelOverlap);
    get indentFromTick(): number;
    set indentFromTick(value: number);
    get overlappingBehavior(): LabelOverlap;
    set overlappingBehavior(value: LabelOverlap);
    get useRangeColors(): boolean;
    set useRangeColors(value: boolean);
    get visible(): boolean;
    set visible(value: boolean);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoCircularGaugeLabelComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoCircularGaugeLabelComponent, "dxo-circular-gauge-label", never, { "customizeText": { "alias": "customizeText"; "required": false; }; "font": { "alias": "font"; "required": false; }; "format": { "alias": "format"; "required": false; }; "hideFirstOrLast": { "alias": "hideFirstOrLast"; "required": false; }; "indentFromTick": { "alias": "indentFromTick"; "required": false; }; "overlappingBehavior": { "alias": "overlappingBehavior"; "required": false; }; "useRangeColors": { "alias": "useRangeColors"; "required": false; }; "visible": { "alias": "visible"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxoCircularGaugeLabelModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoCircularGaugeLabelModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoCircularGaugeLabelModule, [typeof DxoCircularGaugeLabelComponent], never, [typeof DxoCircularGaugeLabelComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoCircularGaugeLabelModule>;
}
