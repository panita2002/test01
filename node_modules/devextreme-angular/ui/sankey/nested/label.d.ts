/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { dxSankeyNode } from 'devextreme/viz/sankey';
import { Font, TextOverflow } from 'devextreme/common/charts';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoSankeyLabelComponent extends NestedOption implements OnDestroy, OnInit {
    get border(): {
        color?: string | undefined;
        visible?: boolean | undefined;
        width?: number | undefined;
    };
    set border(value: {
        color?: string | undefined;
        visible?: boolean | undefined;
        width?: number | undefined;
    });
    get customizeText(): ((itemInfo: dxSankeyNode) => string);
    set customizeText(value: ((itemInfo: dxSankeyNode) => string));
    get font(): Font;
    set font(value: Font);
    get horizontalOffset(): number;
    set horizontalOffset(value: number);
    get overlappingBehavior(): TextOverflow;
    set overlappingBehavior(value: TextOverflow);
    get shadow(): {
        blur?: number;
        color?: string;
        offsetX?: number;
        offsetY?: number;
        opacity?: number;
    };
    set shadow(value: {
        blur?: number;
        color?: string;
        offsetX?: number;
        offsetY?: number;
        opacity?: number;
    });
    get useNodeColors(): boolean;
    set useNodeColors(value: boolean);
    get verticalOffset(): number;
    set verticalOffset(value: number);
    get visible(): boolean;
    set visible(value: boolean);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoSankeyLabelComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoSankeyLabelComponent, "dxo-sankey-label", never, { "border": { "alias": "border"; "required": false; }; "customizeText": { "alias": "customizeText"; "required": false; }; "font": { "alias": "font"; "required": false; }; "horizontalOffset": { "alias": "horizontalOffset"; "required": false; }; "overlappingBehavior": { "alias": "overlappingBehavior"; "required": false; }; "shadow": { "alias": "shadow"; "required": false; }; "useNodeColors": { "alias": "useNodeColors"; "required": false; }; "verticalOffset": { "alias": "verticalOffset"; "required": false; }; "visible": { "alias": "visible"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxoSankeyLabelModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoSankeyLabelModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoSankeyLabelModule, [typeof DxoSankeyLabelComponent], never, [typeof DxoSankeyLabelComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoSankeyLabelModule>;
}
