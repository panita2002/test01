/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { ColumnChooserMode, ColumnChooserSearchConfig, ColumnChooserSelectionConfig } from 'devextreme/common/grids';
import { PositionConfig } from 'devextreme/common/core/animation';
import { SortOrder } from 'devextreme/common';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoDataGridColumnChooserComponent extends NestedOption implements OnDestroy, OnInit {
    get allowSearch(): boolean;
    set allowSearch(value: boolean);
    get container(): any | string | undefined;
    set container(value: any | string | undefined);
    get emptyPanelText(): string;
    set emptyPanelText(value: string);
    get enabled(): boolean;
    set enabled(value: boolean);
    get height(): number | string;
    set height(value: number | string);
    get mode(): ColumnChooserMode;
    set mode(value: ColumnChooserMode);
    get position(): PositionConfig | undefined;
    set position(value: PositionConfig | undefined);
    get search(): ColumnChooserSearchConfig;
    set search(value: ColumnChooserSearchConfig);
    get searchTimeout(): number;
    set searchTimeout(value: number);
    get selection(): ColumnChooserSelectionConfig;
    set selection(value: ColumnChooserSelectionConfig);
    get sortOrder(): SortOrder | undefined;
    set sortOrder(value: SortOrder | undefined);
    get title(): string;
    set title(value: string);
    get width(): number | string;
    set width(value: number | string);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoDataGridColumnChooserComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoDataGridColumnChooserComponent, "dxo-data-grid-column-chooser", never, { "allowSearch": { "alias": "allowSearch"; "required": false; }; "container": { "alias": "container"; "required": false; }; "emptyPanelText": { "alias": "emptyPanelText"; "required": false; }; "enabled": { "alias": "enabled"; "required": false; }; "height": { "alias": "height"; "required": false; }; "mode": { "alias": "mode"; "required": false; }; "position": { "alias": "position"; "required": false; }; "search": { "alias": "search"; "required": false; }; "searchTimeout": { "alias": "searchTimeout"; "required": false; }; "selection": { "alias": "selection"; "required": false; }; "sortOrder": { "alias": "sortOrder"; "required": false; }; "title": { "alias": "title"; "required": false; }; "width": { "alias": "width"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxoDataGridColumnChooserModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoDataGridColumnChooserModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoDataGridColumnChooserModule, [typeof DxoDataGridColumnChooserComponent], never, [typeof DxoDataGridColumnChooserComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoDataGridColumnChooserModule>;
}
