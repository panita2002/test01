/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { DataSourceOptions } from 'devextreme/data/data_source';
import { Store } from 'devextreme/data/store';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoDataGridLookupComponent extends NestedOption implements OnDestroy, OnInit {
    get allowClearing(): boolean;
    set allowClearing(value: boolean);
    get calculateCellValue(): ((rowData: any) => any);
    set calculateCellValue(value: ((rowData: any) => any));
    get dataSource(): Array<any> | DataSourceOptions | ((options: {
        data: Record<string, any>;
        key: any;
    }) => Array<any> | Store | DataSourceOptions) | null | Store | undefined;
    set dataSource(value: Array<any> | DataSourceOptions | ((options: {
        data: Record<string, any>;
        key: any;
    }) => Array<any> | Store | DataSourceOptions) | null | Store | undefined);
    get displayExpr(): ((data: any) => string) | string | undefined;
    set displayExpr(value: ((data: any) => string) | string | undefined);
    get valueExpr(): string | undefined | ((data: any) => string | number | boolean);
    set valueExpr(value: string | undefined | ((data: any) => string | number | boolean));
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoDataGridLookupComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoDataGridLookupComponent, "dxo-data-grid-lookup", never, { "allowClearing": { "alias": "allowClearing"; "required": false; }; "calculateCellValue": { "alias": "calculateCellValue"; "required": false; }; "dataSource": { "alias": "dataSource"; "required": false; }; "displayExpr": { "alias": "displayExpr"; "required": false; }; "valueExpr": { "alias": "valueExpr"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxoDataGridLookupModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoDataGridLookupModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoDataGridLookupModule, [typeof DxoDataGridLookupComponent], never, [typeof DxoDataGridLookupComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoDataGridLookupModule>;
}
