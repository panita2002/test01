/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { ApplyFilterMode } from 'devextreme/common/grids';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxoDataGridFilterRowComponent extends NestedOption implements OnDestroy, OnInit {
    get applyFilter(): ApplyFilterMode;
    set applyFilter(value: ApplyFilterMode);
    get applyFilterText(): string;
    set applyFilterText(value: string);
    get betweenEndText(): string;
    set betweenEndText(value: string);
    get betweenStartText(): string;
    set betweenStartText(value: string);
    get operationDescriptions(): {
        between?: string;
        contains?: string;
        endsWith?: string;
        equal?: string;
        greaterThan?: string;
        greaterThanOrEqual?: string;
        lessThan?: string;
        lessThanOrEqual?: string;
        notContains?: string;
        notEqual?: string;
        startsWith?: string;
    };
    set operationDescriptions(value: {
        between?: string;
        contains?: string;
        endsWith?: string;
        equal?: string;
        greaterThan?: string;
        greaterThanOrEqual?: string;
        lessThan?: string;
        lessThanOrEqual?: string;
        notContains?: string;
        notEqual?: string;
        startsWith?: string;
    });
    get resetOperationText(): string;
    set resetOperationText(value: string);
    get showAllText(): string;
    set showAllText(value: string);
    get showOperationChooser(): boolean;
    set showOperationChooser(value: boolean);
    get visible(): boolean;
    set visible(value: boolean);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoDataGridFilterRowComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxoDataGridFilterRowComponent, "dxo-data-grid-filter-row", never, { "applyFilter": { "alias": "applyFilter"; "required": false; }; "applyFilterText": { "alias": "applyFilterText"; "required": false; }; "betweenEndText": { "alias": "betweenEndText"; "required": false; }; "betweenStartText": { "alias": "betweenStartText"; "required": false; }; "operationDescriptions": { "alias": "operationDescriptions"; "required": false; }; "resetOperationText": { "alias": "resetOperationText"; "required": false; }; "showAllText": { "alias": "showAllText"; "required": false; }; "showOperationChooser": { "alias": "showOperationChooser"; "required": false; }; "visible": { "alias": "visible"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxoDataGridFilterRowModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxoDataGridFilterRowModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxoDataGridFilterRowModule, [typeof DxoDataGridFilterRowComponent], never, [typeof DxoDataGridFilterRowComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxoDataGridFilterRowModule>;
}
