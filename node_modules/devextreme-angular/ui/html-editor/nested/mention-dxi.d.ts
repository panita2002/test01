/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { ElementRef, Renderer2, AfterViewInit } from '@angular/core';
import DataSource from 'devextreme/data/data_source';
import { DataSourceOptions } from 'devextreme/data/data_source';
import { Store } from 'devextreme/data/store';
import { NestedOptionHost, DxTemplateDirective, IDxTemplateHost, DxTemplateHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxiHtmlEditorMentionComponent extends CollectionNestedOption implements AfterViewInit, IDxTemplateHost {
    private renderer;
    private document;
    private element;
    get dataSource(): Array<any> | DataSource | DataSourceOptions | null | Store | string;
    set dataSource(value: Array<any> | DataSource | DataSourceOptions | null | Store | string);
    get displayExpr(): ((item: any) => string) | string;
    set displayExpr(value: ((item: any) => string) | string);
    get itemTemplate(): any;
    set itemTemplate(value: any);
    get marker(): string;
    set marker(value: string);
    get minSearchLength(): number;
    set minSearchLength(value: number);
    get searchExpr(): Array<Function | string> | Function | string;
    set searchExpr(value: Array<Function | string> | Function | string);
    get searchTimeout(): number;
    set searchTimeout(value: number);
    get template(): any;
    set template(value: any);
    get valueExpr(): Function | string;
    set valueExpr(value: Function | string);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost, renderer: Renderer2, document: any, templateHost: DxTemplateHost, element: ElementRef);
    setTemplate(template: DxTemplateDirective): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiHtmlEditorMentionComponent, [{ host: true; skipSelf: true; }, { host: true; }, null, null, { host: true; }, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiHtmlEditorMentionComponent, "dxi-html-editor-mention", never, { "dataSource": { "alias": "dataSource"; "required": false; }; "displayExpr": { "alias": "displayExpr"; "required": false; }; "itemTemplate": { "alias": "itemTemplate"; "required": false; }; "marker": { "alias": "marker"; "required": false; }; "minSearchLength": { "alias": "minSearchLength"; "required": false; }; "searchExpr": { "alias": "searchExpr"; "required": false; }; "searchTimeout": { "alias": "searchTimeout"; "required": false; }; "template": { "alias": "template"; "required": false; }; "valueExpr": { "alias": "valueExpr"; "required": false; }; }, {}, never, ["*"], false, never>;
}
export declare class DxiHtmlEditorMentionModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiHtmlEditorMentionModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxiHtmlEditorMentionModule, [typeof DxiHtmlEditorMentionComponent], never, [typeof DxiHtmlEditorMentionComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxiHtmlEditorMentionModule>;
}
