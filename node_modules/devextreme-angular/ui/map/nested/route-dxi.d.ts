/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { QueryList } from '@angular/core';
import { RouteMode } from 'devextreme/ui/map';
import { NestedOptionHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import { DxiMapLocationComponent } from './location-dxi';
import * as i0 from "@angular/core";
export declare class DxiMapRouteComponent extends CollectionNestedOption {
    get color(): string;
    set color(value: string);
    get locations(): {
        lat?: number;
        lng?: number;
    }[];
    set locations(value: {
        lat?: number;
        lng?: number;
    }[]);
    get mode(): RouteMode;
    set mode(value: RouteMode);
    get opacity(): number;
    set opacity(value: number);
    get weight(): number;
    set weight(value: number);
    protected get _optionPath(): string;
    get locationsChildren(): QueryList<DxiMapLocationComponent>;
    set locationsChildren(value: QueryList<DxiMapLocationComponent>);
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiMapRouteComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiMapRouteComponent, "dxi-map-route", never, { "color": { "alias": "color"; "required": false; }; "locations": { "alias": "locations"; "required": false; }; "mode": { "alias": "mode"; "required": false; }; "opacity": { "alias": "opacity"; "required": false; }; "weight": { "alias": "weight"; "required": false; }; }, {}, ["locationsChildren"], never, false, never>;
}
export declare class DxiMapRouteModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiMapRouteModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxiMapRouteModule, [typeof DxiMapRouteComponent], never, [typeof DxiMapRouteComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxiMapRouteModule>;
}
