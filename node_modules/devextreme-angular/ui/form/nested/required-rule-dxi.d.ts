import { ValidationRuleType } from 'devextreme/common';
import { NestedOptionHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import * as i0 from "@angular/core";
export declare class DxiFormRequiredRuleComponent extends CollectionNestedOption {
    get message(): string;
    set message(value: string);
    get trim(): boolean;
    set trim(value: boolean);
    get type(): ValidationRuleType;
    set type(value: ValidationRuleType);
    protected get _optionPath(): string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiFormRequiredRuleComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<DxiFormRequiredRuleComponent, "dxi-form-required-rule", never, { "message": { "alias": "message"; "required": false; }; "trim": { "alias": "trim"; "required": false; }; "type": { "alias": "type"; "required": false; }; }, {}, never, never, false, never>;
}
export declare class DxiFormRequiredRuleModule {
    static ɵfac: i0.ɵɵFactoryDeclaration<DxiFormRequiredRuleModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<DxiFormRequiredRuleModule, [typeof DxiFormRequiredRuleComponent], never, [typeof DxiFormRequiredRuleComponent]>;
    static ɵinj: i0.ɵɵInjectorDeclaration<DxiFormRequiredRuleModule>;
}
