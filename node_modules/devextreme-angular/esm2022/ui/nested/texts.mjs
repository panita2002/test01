/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
/* tslint:disable:use-input-property-decorator */
import { Component, NgModule, Host, SkipSelf } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { DxoGanttHeaderFilterTexts } from './base/gantt-header-filter-texts';
import * as i0 from "@angular/core";
import * as i1 from "devextreme-angular/core";
export class DxoTextsComponent extends DxoGanttHeaderFilterTexts {
    get _optionPath() {
        return 'texts';
    }
    constructor(parentOptionHost, optionHost) {
        super();
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    ngOnInit() {
        this._addRecreatedComponent();
    }
    ngOnDestroy() {
        this._addRemovedOption(this._getOptionPath());
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxoTextsComponent, deps: [{ token: i1.NestedOptionHost, host: true, skipSelf: true }, { token: i1.NestedOptionHost, host: true }], target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.12", type: DxoTextsComponent, selector: "dxo-texts", inputs: { fix: "fix", leftPosition: "leftPosition", rightPosition: "rightPosition", stickyPosition: "stickyPosition", unfix: "unfix", addRow: "addRow", cancelAllChanges: "cancelAllChanges", cancelRowChanges: "cancelRowChanges", confirmDeleteMessage: "confirmDeleteMessage", confirmDeleteTitle: "confirmDeleteTitle", deleteRow: "deleteRow", editRow: "editRow", saveAllChanges: "saveAllChanges", saveRowChanges: "saveRowChanges", undeleteRow: "undeleteRow", validationCancelChanges: "validationCancelChanges", exportAll: "exportAll", exportSelectedRows: "exportSelectedRows", exportTo: "exportTo", clearFilter: "clearFilter", createFilter: "createFilter", filterEnabledHint: "filterEnabledHint", groupByThisColumn: "groupByThisColumn", groupContinuedMessage: "groupContinuedMessage", groupContinuesMessage: "groupContinuesMessage", ungroup: "ungroup", ungroupAll: "ungroupAll", cancel: "cancel", emptyValue: "emptyValue", ok: "ok", avg: "avg", avgOtherColumn: "avgOtherColumn", count: "count", max: "max", maxOtherColumn: "maxOtherColumn", min: "min", minOtherColumn: "minOtherColumn", sum: "sum", sumOtherColumn: "sumOtherColumn", allFields: "allFields", columnFields: "columnFields", dataFields: "dataFields", filterFields: "filterFields", rowFields: "rowFields", columnFieldArea: "columnFieldArea", dataFieldArea: "dataFieldArea", filterFieldArea: "filterFieldArea", rowFieldArea: "rowFieldArea", collapseAll: "collapseAll", dataNotAvailable: "dataNotAvailable", expandAll: "expandAll", exportToExcel: "exportToExcel", grandTotal: "grandTotal", noData: "noData", removeAllSorting: "removeAllSorting", showFieldChooser: "showFieldChooser", sortColumnBySummary: "sortColumnBySummary", sortRowBySummary: "sortRowBySummary", total: "total", addRowToNode: "addRowToNode" }, providers: [NestedOptionHost], usesInheritance: true, ngImport: i0, template: '', isInline: true, styles: [""] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxoTextsComponent, decorators: [{
            type: Component,
            args: [{ selector: 'dxo-texts', template: '', providers: [NestedOptionHost], inputs: [
                        'fix',
                        'leftPosition',
                        'rightPosition',
                        'stickyPosition',
                        'unfix',
                        'addRow',
                        'cancelAllChanges',
                        'cancelRowChanges',
                        'confirmDeleteMessage',
                        'confirmDeleteTitle',
                        'deleteRow',
                        'editRow',
                        'saveAllChanges',
                        'saveRowChanges',
                        'undeleteRow',
                        'validationCancelChanges',
                        'exportAll',
                        'exportSelectedRows',
                        'exportTo',
                        'clearFilter',
                        'createFilter',
                        'filterEnabledHint',
                        'groupByThisColumn',
                        'groupContinuedMessage',
                        'groupContinuesMessage',
                        'ungroup',
                        'ungroupAll',
                        'cancel',
                        'emptyValue',
                        'ok',
                        'avg',
                        'avgOtherColumn',
                        'count',
                        'max',
                        'maxOtherColumn',
                        'min',
                        'minOtherColumn',
                        'sum',
                        'sumOtherColumn',
                        'allFields',
                        'columnFields',
                        'dataFields',
                        'filterFields',
                        'rowFields',
                        'columnFieldArea',
                        'dataFieldArea',
                        'filterFieldArea',
                        'rowFieldArea',
                        'collapseAll',
                        'dataNotAvailable',
                        'expandAll',
                        'exportToExcel',
                        'grandTotal',
                        'noData',
                        'removeAllSorting',
                        'showFieldChooser',
                        'sortColumnBySummary',
                        'sortRowBySummary',
                        'total',
                        'addRowToNode'
                    ] }]
        }], ctorParameters: () => [{ type: i1.NestedOptionHost, decorators: [{
                    type: SkipSelf
                }, {
                    type: Host
                }] }, { type: i1.NestedOptionHost, decorators: [{
                    type: Host
                }] }] });
export class DxoTextsModule {
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxoTextsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
    /** @nocollapse */ static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.3.12", ngImport: i0, type: DxoTextsModule, declarations: [DxoTextsComponent], exports: [DxoTextsComponent] });
    /** @nocollapse */ static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxoTextsModule });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxoTextsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        DxoTextsComponent
                    ],
                    exports: [
                        DxoTextsComponent
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGV4dHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9kaXN0L3VpL25lc3RlZC90ZXh0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7R0FXRztBQUVILG9DQUFvQztBQUVwQyxpREFBaUQ7QUFFakQsT0FBTyxFQUNILFNBQVMsRUFHVCxRQUFRLEVBQ1IsSUFBSSxFQUNKLFFBQVEsRUFDWCxNQUFNLGVBQWUsQ0FBQztBQU12QixPQUFPLEVBQ0gsZ0JBQWdCLEdBQ25CLE1BQU0seUJBQXlCLENBQUM7QUFDakMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sa0NBQWtDLENBQUM7OztBQXVFN0UsTUFBTSxPQUFPLGlCQUFrQixTQUFRLHlCQUF5QjtJQUU1RCxJQUFjLFdBQVc7UUFDckIsT0FBTyxPQUFPLENBQUM7SUFDbkIsQ0FBQztJQUdELFlBQWdDLGdCQUFrQyxFQUNsRCxVQUE0QjtRQUN4QyxLQUFLLEVBQUUsQ0FBQztRQUNSLGdCQUFnQixDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQzlELENBQUM7SUFHRCxRQUFRO1FBQ0osSUFBSSxDQUFDLHNCQUFzQixFQUFFLENBQUM7SUFDbEMsQ0FBQztJQUVELFdBQVc7UUFDUCxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDLENBQUM7SUFDbEQsQ0FBQzsySEFyQlEsaUJBQWlCOytHQUFqQixpQkFBaUIsOHdEQWhFZixDQUFDLGdCQUFnQixDQUFDLGlEQUZuQixFQUFFOzs0RkFrRUgsaUJBQWlCO2tCQXBFN0IsU0FBUzsrQkFDSSxXQUFXLFlBQ1gsRUFBRSxhQUVELENBQUMsZ0JBQWdCLENBQUMsVUFDckI7d0JBQ0osS0FBSzt3QkFDTCxjQUFjO3dCQUNkLGVBQWU7d0JBQ2YsZ0JBQWdCO3dCQUNoQixPQUFPO3dCQUNQLFFBQVE7d0JBQ1Isa0JBQWtCO3dCQUNsQixrQkFBa0I7d0JBQ2xCLHNCQUFzQjt3QkFDdEIsb0JBQW9CO3dCQUNwQixXQUFXO3dCQUNYLFNBQVM7d0JBQ1QsZ0JBQWdCO3dCQUNoQixnQkFBZ0I7d0JBQ2hCLGFBQWE7d0JBQ2IseUJBQXlCO3dCQUN6QixXQUFXO3dCQUNYLG9CQUFvQjt3QkFDcEIsVUFBVTt3QkFDVixhQUFhO3dCQUNiLGNBQWM7d0JBQ2QsbUJBQW1CO3dCQUNuQixtQkFBbUI7d0JBQ25CLHVCQUF1Qjt3QkFDdkIsdUJBQXVCO3dCQUN2QixTQUFTO3dCQUNULFlBQVk7d0JBQ1osUUFBUTt3QkFDUixZQUFZO3dCQUNaLElBQUk7d0JBQ0osS0FBSzt3QkFDTCxnQkFBZ0I7d0JBQ2hCLE9BQU87d0JBQ1AsS0FBSzt3QkFDTCxnQkFBZ0I7d0JBQ2hCLEtBQUs7d0JBQ0wsZ0JBQWdCO3dCQUNoQixLQUFLO3dCQUNMLGdCQUFnQjt3QkFDaEIsV0FBVzt3QkFDWCxjQUFjO3dCQUNkLFlBQVk7d0JBQ1osY0FBYzt3QkFDZCxXQUFXO3dCQUNYLGlCQUFpQjt3QkFDakIsZUFBZTt3QkFDZixpQkFBaUI7d0JBQ2pCLGNBQWM7d0JBQ2QsYUFBYTt3QkFDYixrQkFBa0I7d0JBQ2xCLFdBQVc7d0JBQ1gsZUFBZTt3QkFDZixZQUFZO3dCQUNaLFFBQVE7d0JBQ1Isa0JBQWtCO3dCQUNsQixrQkFBa0I7d0JBQ2xCLHFCQUFxQjt3QkFDckIsa0JBQWtCO3dCQUNsQixPQUFPO3dCQUNQLGNBQWM7cUJBQ2pCOzswQkFTWSxRQUFROzswQkFBSSxJQUFJOzswQkFDcEIsSUFBSTs7QUEwQmpCLE1BQU0sT0FBTyxjQUFjOzJIQUFkLGNBQWM7NEhBQWQsY0FBYyxpQkFsQ2QsaUJBQWlCLGFBQWpCLGlCQUFpQjs0SEFrQ2pCLGNBQWM7OzRGQUFkLGNBQWM7a0JBUjFCLFFBQVE7bUJBQUM7b0JBQ1IsWUFBWSxFQUFFO3dCQUNaLGlCQUFpQjtxQkFDbEI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLGlCQUFpQjtxQkFDbEI7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIGRldmV4dHJlbWUtYW5ndWxhclxuICogVmVyc2lvbjogMjQuMi4zXG4gKiBCdWlsZCBkYXRlOiBGcmkgRGVjIDA2IDIwMjRcbiAqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTIgLSAyMDI0IERldmVsb3BlciBFeHByZXNzIEluYy4gQUxMIFJJR0hUUyBSRVNFUlZFRFxuICpcbiAqIFRoaXMgc29mdHdhcmUgbWF5IGJlIG1vZGlmaWVkIGFuZCBkaXN0cmlidXRlZCB1bmRlciB0aGUgdGVybXNcbiAqIG9mIHRoZSBNSVQgbGljZW5zZS4gU2VlIHRoZSBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3Qgb2YgdGhlIHByb2plY3QgZm9yIGRldGFpbHMuXG4gKlxuICogaHR0cHM6Ly9naXRodWIuY29tL0RldkV4cHJlc3MvZGV2ZXh0cmVtZS1hbmd1bGFyXG4gKi9cblxuLyogdHNsaW50OmRpc2FibGU6bWF4LWxpbmUtbGVuZ3RoICovXHJcblxyXG4vKiB0c2xpbnQ6ZGlzYWJsZTp1c2UtaW5wdXQtcHJvcGVydHktZGVjb3JhdG9yICovXHJcblxyXG5pbXBvcnQge1xyXG4gICAgQ29tcG9uZW50LFxyXG4gICAgT25Jbml0LFxyXG4gICAgT25EZXN0cm95LFxyXG4gICAgTmdNb2R1bGUsXHJcbiAgICBIb3N0LFxyXG4gICAgU2tpcFNlbGZcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcblxyXG5cclxuXHJcblxyXG5pbXBvcnQge1xyXG4gICAgTmVzdGVkT3B0aW9uSG9zdCxcclxufSBmcm9tICdkZXZleHRyZW1lLWFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IER4b0dhbnR0SGVhZGVyRmlsdGVyVGV4dHMgfSBmcm9tICcuL2Jhc2UvZ2FudHQtaGVhZGVyLWZpbHRlci10ZXh0cyc7XHJcblxyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2R4by10ZXh0cycsXHJcbiAgICB0ZW1wbGF0ZTogJycsXHJcbiAgICBzdHlsZXM6IFsnJ10sXHJcbiAgICBwcm92aWRlcnM6IFtOZXN0ZWRPcHRpb25Ib3N0XSxcclxuICAgIGlucHV0czogW1xyXG4gICAgICAgICdmaXgnLFxyXG4gICAgICAgICdsZWZ0UG9zaXRpb24nLFxyXG4gICAgICAgICdyaWdodFBvc2l0aW9uJyxcclxuICAgICAgICAnc3RpY2t5UG9zaXRpb24nLFxyXG4gICAgICAgICd1bmZpeCcsXHJcbiAgICAgICAgJ2FkZFJvdycsXHJcbiAgICAgICAgJ2NhbmNlbEFsbENoYW5nZXMnLFxyXG4gICAgICAgICdjYW5jZWxSb3dDaGFuZ2VzJyxcclxuICAgICAgICAnY29uZmlybURlbGV0ZU1lc3NhZ2UnLFxyXG4gICAgICAgICdjb25maXJtRGVsZXRlVGl0bGUnLFxyXG4gICAgICAgICdkZWxldGVSb3cnLFxyXG4gICAgICAgICdlZGl0Um93JyxcclxuICAgICAgICAnc2F2ZUFsbENoYW5nZXMnLFxyXG4gICAgICAgICdzYXZlUm93Q2hhbmdlcycsXHJcbiAgICAgICAgJ3VuZGVsZXRlUm93JyxcclxuICAgICAgICAndmFsaWRhdGlvbkNhbmNlbENoYW5nZXMnLFxyXG4gICAgICAgICdleHBvcnRBbGwnLFxyXG4gICAgICAgICdleHBvcnRTZWxlY3RlZFJvd3MnLFxyXG4gICAgICAgICdleHBvcnRUbycsXHJcbiAgICAgICAgJ2NsZWFyRmlsdGVyJyxcclxuICAgICAgICAnY3JlYXRlRmlsdGVyJyxcclxuICAgICAgICAnZmlsdGVyRW5hYmxlZEhpbnQnLFxyXG4gICAgICAgICdncm91cEJ5VGhpc0NvbHVtbicsXHJcbiAgICAgICAgJ2dyb3VwQ29udGludWVkTWVzc2FnZScsXHJcbiAgICAgICAgJ2dyb3VwQ29udGludWVzTWVzc2FnZScsXHJcbiAgICAgICAgJ3VuZ3JvdXAnLFxyXG4gICAgICAgICd1bmdyb3VwQWxsJyxcclxuICAgICAgICAnY2FuY2VsJyxcclxuICAgICAgICAnZW1wdHlWYWx1ZScsXHJcbiAgICAgICAgJ29rJyxcclxuICAgICAgICAnYXZnJyxcclxuICAgICAgICAnYXZnT3RoZXJDb2x1bW4nLFxyXG4gICAgICAgICdjb3VudCcsXHJcbiAgICAgICAgJ21heCcsXHJcbiAgICAgICAgJ21heE90aGVyQ29sdW1uJyxcclxuICAgICAgICAnbWluJyxcclxuICAgICAgICAnbWluT3RoZXJDb2x1bW4nLFxyXG4gICAgICAgICdzdW0nLFxyXG4gICAgICAgICdzdW1PdGhlckNvbHVtbicsXHJcbiAgICAgICAgJ2FsbEZpZWxkcycsXHJcbiAgICAgICAgJ2NvbHVtbkZpZWxkcycsXHJcbiAgICAgICAgJ2RhdGFGaWVsZHMnLFxyXG4gICAgICAgICdmaWx0ZXJGaWVsZHMnLFxyXG4gICAgICAgICdyb3dGaWVsZHMnLFxyXG4gICAgICAgICdjb2x1bW5GaWVsZEFyZWEnLFxyXG4gICAgICAgICdkYXRhRmllbGRBcmVhJyxcclxuICAgICAgICAnZmlsdGVyRmllbGRBcmVhJyxcclxuICAgICAgICAncm93RmllbGRBcmVhJyxcclxuICAgICAgICAnY29sbGFwc2VBbGwnLFxyXG4gICAgICAgICdkYXRhTm90QXZhaWxhYmxlJyxcclxuICAgICAgICAnZXhwYW5kQWxsJyxcclxuICAgICAgICAnZXhwb3J0VG9FeGNlbCcsXHJcbiAgICAgICAgJ2dyYW5kVG90YWwnLFxyXG4gICAgICAgICdub0RhdGEnLFxyXG4gICAgICAgICdyZW1vdmVBbGxTb3J0aW5nJyxcclxuICAgICAgICAnc2hvd0ZpZWxkQ2hvb3NlcicsXHJcbiAgICAgICAgJ3NvcnRDb2x1bW5CeVN1bW1hcnknLFxyXG4gICAgICAgICdzb3J0Um93QnlTdW1tYXJ5JyxcclxuICAgICAgICAndG90YWwnLFxyXG4gICAgICAgICdhZGRSb3dUb05vZGUnXHJcbiAgICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBEeG9UZXh0c0NvbXBvbmVudCBleHRlbmRzIER4b0dhbnR0SGVhZGVyRmlsdGVyVGV4dHMgaW1wbGVtZW50cyBPbkRlc3Ryb3ksIE9uSW5pdCAge1xyXG5cclxuICAgIHByb3RlY3RlZCBnZXQgX29wdGlvblBhdGgoKSB7XHJcbiAgICAgICAgcmV0dXJuICd0ZXh0cyc7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGNvbnN0cnVjdG9yKEBTa2lwU2VsZigpIEBIb3N0KCkgcGFyZW50T3B0aW9uSG9zdDogTmVzdGVkT3B0aW9uSG9zdCxcclxuICAgICAgICAgICAgQEhvc3QoKSBvcHRpb25Ib3N0OiBOZXN0ZWRPcHRpb25Ib3N0KSB7XHJcbiAgICAgICAgc3VwZXIoKTtcclxuICAgICAgICBwYXJlbnRPcHRpb25Ib3N0LnNldE5lc3RlZE9wdGlvbih0aGlzKTtcclxuICAgICAgICBvcHRpb25Ib3N0LnNldEhvc3QodGhpcywgdGhpcy5fZnVsbE9wdGlvblBhdGguYmluZCh0aGlzKSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIG5nT25Jbml0KCkge1xyXG4gICAgICAgIHRoaXMuX2FkZFJlY3JlYXRlZENvbXBvbmVudCgpO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25EZXN0cm95KCkge1xyXG4gICAgICAgIHRoaXMuX2FkZFJlbW92ZWRPcHRpb24odGhpcy5fZ2V0T3B0aW9uUGF0aCgpKTtcclxuICAgIH1cclxuXHJcblxyXG59XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgRHhvVGV4dHNDb21wb25lbnRcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIER4b1RleHRzQ29tcG9uZW50XHJcbiAgXSxcclxufSlcclxuZXhwb3J0IGNsYXNzIER4b1RleHRzTW9kdWxlIHsgfVxyXG4iXX0=