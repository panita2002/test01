/*!
 * devextreme-angular
 * Version: 24.2.3
 * Build date: Fri Dec 06 2024
 *
 * Copyright (c) 2012 - 2024 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
/* tslint:disable:max-line-length */
import { NestedOption } from 'devextreme-angular/core';
import { Component, } from '@angular/core';
import * as i0 from "@angular/core";
export class DxoGanttHeaderFilterTexts extends NestedOption {
    get fix() {
        return this._getOption('fix');
    }
    set fix(value) {
        this._setOption('fix', value);
    }
    get leftPosition() {
        return this._getOption('leftPosition');
    }
    set leftPosition(value) {
        this._setOption('leftPosition', value);
    }
    get rightPosition() {
        return this._getOption('rightPosition');
    }
    set rightPosition(value) {
        this._setOption('rightPosition', value);
    }
    get stickyPosition() {
        return this._getOption('stickyPosition');
    }
    set stickyPosition(value) {
        this._setOption('stickyPosition', value);
    }
    get unfix() {
        return this._getOption('unfix');
    }
    set unfix(value) {
        this._setOption('unfix', value);
    }
    get addRow() {
        return this._getOption('addRow');
    }
    set addRow(value) {
        this._setOption('addRow', value);
    }
    get cancelAllChanges() {
        return this._getOption('cancelAllChanges');
    }
    set cancelAllChanges(value) {
        this._setOption('cancelAllChanges', value);
    }
    get cancelRowChanges() {
        return this._getOption('cancelRowChanges');
    }
    set cancelRowChanges(value) {
        this._setOption('cancelRowChanges', value);
    }
    get confirmDeleteMessage() {
        return this._getOption('confirmDeleteMessage');
    }
    set confirmDeleteMessage(value) {
        this._setOption('confirmDeleteMessage', value);
    }
    get confirmDeleteTitle() {
        return this._getOption('confirmDeleteTitle');
    }
    set confirmDeleteTitle(value) {
        this._setOption('confirmDeleteTitle', value);
    }
    get deleteRow() {
        return this._getOption('deleteRow');
    }
    set deleteRow(value) {
        this._setOption('deleteRow', value);
    }
    get editRow() {
        return this._getOption('editRow');
    }
    set editRow(value) {
        this._setOption('editRow', value);
    }
    get saveAllChanges() {
        return this._getOption('saveAllChanges');
    }
    set saveAllChanges(value) {
        this._setOption('saveAllChanges', value);
    }
    get saveRowChanges() {
        return this._getOption('saveRowChanges');
    }
    set saveRowChanges(value) {
        this._setOption('saveRowChanges', value);
    }
    get undeleteRow() {
        return this._getOption('undeleteRow');
    }
    set undeleteRow(value) {
        this._setOption('undeleteRow', value);
    }
    get validationCancelChanges() {
        return this._getOption('validationCancelChanges');
    }
    set validationCancelChanges(value) {
        this._setOption('validationCancelChanges', value);
    }
    get exportAll() {
        return this._getOption('exportAll');
    }
    set exportAll(value) {
        this._setOption('exportAll', value);
    }
    get exportSelectedRows() {
        return this._getOption('exportSelectedRows');
    }
    set exportSelectedRows(value) {
        this._setOption('exportSelectedRows', value);
    }
    get exportTo() {
        return this._getOption('exportTo');
    }
    set exportTo(value) {
        this._setOption('exportTo', value);
    }
    get clearFilter() {
        return this._getOption('clearFilter');
    }
    set clearFilter(value) {
        this._setOption('clearFilter', value);
    }
    get createFilter() {
        return this._getOption('createFilter');
    }
    set createFilter(value) {
        this._setOption('createFilter', value);
    }
    get filterEnabledHint() {
        return this._getOption('filterEnabledHint');
    }
    set filterEnabledHint(value) {
        this._setOption('filterEnabledHint', value);
    }
    get groupByThisColumn() {
        return this._getOption('groupByThisColumn');
    }
    set groupByThisColumn(value) {
        this._setOption('groupByThisColumn', value);
    }
    get groupContinuedMessage() {
        return this._getOption('groupContinuedMessage');
    }
    set groupContinuedMessage(value) {
        this._setOption('groupContinuedMessage', value);
    }
    get groupContinuesMessage() {
        return this._getOption('groupContinuesMessage');
    }
    set groupContinuesMessage(value) {
        this._setOption('groupContinuesMessage', value);
    }
    get ungroup() {
        return this._getOption('ungroup');
    }
    set ungroup(value) {
        this._setOption('ungroup', value);
    }
    get ungroupAll() {
        return this._getOption('ungroupAll');
    }
    set ungroupAll(value) {
        this._setOption('ungroupAll', value);
    }
    get cancel() {
        return this._getOption('cancel');
    }
    set cancel(value) {
        this._setOption('cancel', value);
    }
    get emptyValue() {
        return this._getOption('emptyValue');
    }
    set emptyValue(value) {
        this._setOption('emptyValue', value);
    }
    get ok() {
        return this._getOption('ok');
    }
    set ok(value) {
        this._setOption('ok', value);
    }
    get avg() {
        return this._getOption('avg');
    }
    set avg(value) {
        this._setOption('avg', value);
    }
    get avgOtherColumn() {
        return this._getOption('avgOtherColumn');
    }
    set avgOtherColumn(value) {
        this._setOption('avgOtherColumn', value);
    }
    get count() {
        return this._getOption('count');
    }
    set count(value) {
        this._setOption('count', value);
    }
    get max() {
        return this._getOption('max');
    }
    set max(value) {
        this._setOption('max', value);
    }
    get maxOtherColumn() {
        return this._getOption('maxOtherColumn');
    }
    set maxOtherColumn(value) {
        this._setOption('maxOtherColumn', value);
    }
    get min() {
        return this._getOption('min');
    }
    set min(value) {
        this._setOption('min', value);
    }
    get minOtherColumn() {
        return this._getOption('minOtherColumn');
    }
    set minOtherColumn(value) {
        this._setOption('minOtherColumn', value);
    }
    get sum() {
        return this._getOption('sum');
    }
    set sum(value) {
        this._setOption('sum', value);
    }
    get sumOtherColumn() {
        return this._getOption('sumOtherColumn');
    }
    set sumOtherColumn(value) {
        this._setOption('sumOtherColumn', value);
    }
    get allFields() {
        return this._getOption('allFields');
    }
    set allFields(value) {
        this._setOption('allFields', value);
    }
    get columnFields() {
        return this._getOption('columnFields');
    }
    set columnFields(value) {
        this._setOption('columnFields', value);
    }
    get dataFields() {
        return this._getOption('dataFields');
    }
    set dataFields(value) {
        this._setOption('dataFields', value);
    }
    get filterFields() {
        return this._getOption('filterFields');
    }
    set filterFields(value) {
        this._setOption('filterFields', value);
    }
    get rowFields() {
        return this._getOption('rowFields');
    }
    set rowFields(value) {
        this._setOption('rowFields', value);
    }
    get columnFieldArea() {
        return this._getOption('columnFieldArea');
    }
    set columnFieldArea(value) {
        this._setOption('columnFieldArea', value);
    }
    get dataFieldArea() {
        return this._getOption('dataFieldArea');
    }
    set dataFieldArea(value) {
        this._setOption('dataFieldArea', value);
    }
    get filterFieldArea() {
        return this._getOption('filterFieldArea');
    }
    set filterFieldArea(value) {
        this._setOption('filterFieldArea', value);
    }
    get rowFieldArea() {
        return this._getOption('rowFieldArea');
    }
    set rowFieldArea(value) {
        this._setOption('rowFieldArea', value);
    }
    get collapseAll() {
        return this._getOption('collapseAll');
    }
    set collapseAll(value) {
        this._setOption('collapseAll', value);
    }
    get dataNotAvailable() {
        return this._getOption('dataNotAvailable');
    }
    set dataNotAvailable(value) {
        this._setOption('dataNotAvailable', value);
    }
    get expandAll() {
        return this._getOption('expandAll');
    }
    set expandAll(value) {
        this._setOption('expandAll', value);
    }
    get exportToExcel() {
        return this._getOption('exportToExcel');
    }
    set exportToExcel(value) {
        this._setOption('exportToExcel', value);
    }
    get grandTotal() {
        return this._getOption('grandTotal');
    }
    set grandTotal(value) {
        this._setOption('grandTotal', value);
    }
    get noData() {
        return this._getOption('noData');
    }
    set noData(value) {
        this._setOption('noData', value);
    }
    get removeAllSorting() {
        return this._getOption('removeAllSorting');
    }
    set removeAllSorting(value) {
        this._setOption('removeAllSorting', value);
    }
    get showFieldChooser() {
        return this._getOption('showFieldChooser');
    }
    set showFieldChooser(value) {
        this._setOption('showFieldChooser', value);
    }
    get sortColumnBySummary() {
        return this._getOption('sortColumnBySummary');
    }
    set sortColumnBySummary(value) {
        this._setOption('sortColumnBySummary', value);
    }
    get sortRowBySummary() {
        return this._getOption('sortRowBySummary');
    }
    set sortRowBySummary(value) {
        this._setOption('sortRowBySummary', value);
    }
    get total() {
        return this._getOption('total');
    }
    set total(value) {
        this._setOption('total', value);
    }
    get addRowToNode() {
        return this._getOption('addRowToNode');
    }
    set addRowToNode(value) {
        this._setOption('addRowToNode', value);
    }
    /** @nocollapse */ static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxoGanttHeaderFilterTexts, deps: null, target: i0.ɵɵFactoryTarget.Component });
    /** @nocollapse */ static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.12", type: DxoGanttHeaderFilterTexts, selector: "ng-component", usesInheritance: true, ngImport: i0, template: '', isInline: true });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.12", ngImport: i0, type: DxoGanttHeaderFilterTexts, decorators: [{
            type: Component,
            args: [{
                    template: ''
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,